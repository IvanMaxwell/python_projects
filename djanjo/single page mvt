step-by-step process to create a Django project that displays a single login page at http://127.0.0.1:8000/.

✅ Final Goal
You will create:

A Django project: login_project

A Django app: login_app

A single route / to display a login.html page

🧱 STEP 1: Set Up Your Project
1.1. Open terminal (Command Prompt, VS Code terminal, etc.)
Navigate to where you want the project created:

bash
Copy
Edit
cd path/to/your/projects/folder
1.2. Create and activate a virtual environment
🔹 Windows (CMD):
bash
Copy
Edit
python -m venv venv
venv\Scripts\activate
🔹 macOS/Linux:
bash
Copy
Edit
python3 -m venv venv
source venv/bin/activate
1.3. Install Django
bash
Copy
Edit
pip install django
🚀 STEP 2: Start the Django Project and App
2.1. Create the Django project
bash
Copy
Edit
django-admin startproject login_project
cd login_project
2.2. Create the Django app
bash
Copy
Edit
python manage.py startapp login_app
🛠 STEP 3: Configure the Project
3.1. Enable the app in login_project/settings.py
Find the INSTALLED_APPS section and add 'login_app',:

python
Copy
Edit
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'login_app',  # ✅ Add this line
]
3.2. Configure templates directory
In the same settings.py, find the TEMPLATES section and update 'DIRS' like this:

python
Copy
Edit
import os

TEMPLATES = [
    {
        ...
        'DIRS': [os.path.join(BASE_DIR, 'login_app', 'templates')],
        ...
    },
]
🌐 STEP 4: Set Up URLs
4.1. Create login_app/urls.py
python
Copy
Edit
# login_app/urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('', views.login_view, name='login'),  # Root path
]
4.2. Update the project’s main URL config
Edit login_project/urls.py:

python
Copy
Edit
# login_project/urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('login_app.urls')),  # ✅ Add this
]
👁 STEP 5: Create the Login View
Edit login_app/views.py:

python
Copy
Edit
# login_app/views.py
from django.shortcuts import render

def login_view(request):
    return render(request, 'login.html')
🖼 STEP 6: Create the Login Template
6.1. Create folder structure:
Inside your app folder:

bash
Copy
Edit
mkdir login_app/templates
6.2. Create login.html inside login_app/templates/
html
Copy
Edit
<!-- login_app/templates/login.html -->
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login Page</h2>
    <form method="post">
        {% csrf_token %}
        <label>Username:</label><br>
        <input type="text" name="username"><br><br>

        <label>Password:</label><br>
        <input type="password" name="password"><br><br>

        <button type="submit">Login</button>
    </form>
</body>
</html>
▶️ STEP 7: Run the Server
Run:

bash
Copy
Edit
python manage.py runserver
Then visit:
👉 http://127.0.0.1:8000/

You should see your login page 🎉

🔁 Optional: Make Database Migrations (Good Practice)
Even if no models are used:

bash
Copy
Edit
python manage.py makemigrations
python manage.py migrate
✅ Summary of Structure
pgsql
Copy
Edit
login_project/
├── login_app/
│   ├── templates/
│   │   └── login.html
│   ├── views.py
│   └── urls.py
├── login_project/
│   └── settings.py
│   └── urls.py
├── manage.py
└── venv/
